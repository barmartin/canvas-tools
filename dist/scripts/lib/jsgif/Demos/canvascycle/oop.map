{"version":3,"file":"oop.js","sources":["../../../../../../build/scripts/lib/jsgif/Demos/canvascycle/oop.js"],"names":["_var_exists","name","eval","e","Namespace","create","path","container","match","key","RegExp","$1","replace","prep","$2","Class","members","this","initialize","apply","arguments","__construct","assert","__parent","ns","full_name","__name","obj","static_members","__static","prototype","extend","subclass","set","add","parent","subname","code","toString","args","substring","indexOf","inner_code","lastIndexOf","require","idx","len","length","window","fact","msg","alert"],"mappings":"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","sourcesContent":["/**\n * JavaScript Object Oriented Programming Framework\n * Author: Joseph Huckaby\n * Copyright (c) 2008 Joseph Huckaby.\n * Released under the LGPL v3.0: http://www.opensource.org/licenses/lgpl-3.0.html\n **/\n\nfunction _var_exists(name) {\n\t// return true if var exists in \"global\" context, false otherwise\n\ttry {\n\t\teval('var foo = ' + name + ';');\n\t}\n\tcatch (e) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\nvar Namespace = {\n\t// simple namespace support for classes\n\tcreate: function(path) {\n\t\t// create namespace for class\n\t\tvar container = null;\n\t\twhile (path.match(/^(\\w+)\\.?/)) {\n\t\t\tvar key = RegExp.$1;\n\t\t\tpath = path.replace(/^(\\w+)\\.?/, \"\");\n\t\t\t\n\t\t\tif (!container) {\n\t\t\t\tif (!_var_exists(key)) eval('window.' + key + ' = {};');\n\t\t\t\teval('container = ' + key + ';');\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!container[key]) container[key] = {};\n\t\t\t\tcontainer = container[key];\n\t\t\t}\n\t\t}\n\t},\n\tprep: function(name) {\n\t\t// prep namespace for new class\n\t\tif (name.match(/^(.+)\\.(\\w+)$/)) {\n\t\t\tvar path = RegExp.$1;\n\t\t\tname = RegExp.$2;\n\t\t\tNamespace.create(path);\n\t\t}\n\t\treturn { name: name };\n\t}\n};\n\nvar Class = {\n\t// simple class factory\n\tcreate: function(name, members) {\n\t\t// generate new class with optional namespace\n\t\t\n\t\t// support Prototype-style calling convention\n\t\tif (!name && !members) {\n\t\t\treturn( function() { \n\t\t\t\tif (this.initialize) this.initialize.apply(this, arguments);\n\t\t\t\telse if (this.__construct) this.__construct.apply(this, arguments);\n\t\t\t} );\n\t\t}\n\t\t\n\t\tassert(name, \"Must pass name to Class.create\");\n\t\tif (!members) members = {};\n\t\tmembers.__parent = null;\n\n\t\tvar ns = Namespace.prep(name);\n\t\t// var container = ns.container;\n\t\tvar full_name = name;\n\t\tname = ns.name;\n\t\t\n\t\tmembers.__name = name;\n\n\t\tif (!members.__construct) members.__construct = function() {};\n\t\t\n\t\t// container[name] = members.__construct;\n\t\tvar obj = null;\n\t\teval( full_name + ' = obj = members.__construct;' );\n\t\t\n\t\tvar static_members = members.__static;\n\t\tif (static_members) {\n\t\t\tfor (var key in static_members) {\n\t\t\t\tobj[key] = static_members[key];\n\t\t\t}\n\t\t}\n\n\t\tobj.prototype = members;\n\t\tobj.extend = obj.subclass = function(name, members) {\n\t\t\tClass.subclass( this, name, members );\n\t\t};\n\t\tobj.set = obj.add = function(members) {\n\t\t\tClass.add( this, members );\n\t\t};\n\t},\n\tsubclass: function(parent, name, members) {\n\t\t// subclass an existing class\n\t\tassert(parent, \"Must pass parent class to Class.subclass\");\n\t\tassert(name, \"Must pass name to Class.subclass\");\n\t\tif (!members) members = {};\n\t\tmembers.__name = name;\n\t\tmembers.__parent = parent.prototype;\n\t\t\n\t\tvar ns = Namespace.prep(name);\n\t\t// var container = ns.container;\n\t\tvar subname = ns.name;\n\t\t\n\t\tvar obj = null;\n\t\t\n\t\tif (members.__construct) {\n\t\t\t// explicit subclass constructor\n\t\t\t// container[subname] = members.__construct;\n\t\t\teval( name + ' = obj = members.__construct;' );\n\t\t}\n\t\telse {\n\t\t\t// inherit parent's constructor\n\t\t\tvar code = parent.toString();\n\t\t\tvar args = code.substring( code.indexOf(\"(\")+1, code.indexOf(\")\") );\n\t\t\tvar inner_code = code.substring( code.indexOf(\"{\")+1, code.lastIndexOf(\"}\") );\n\t\t\teval('members.__construct = ' + name + ' = obj = function ('+args+') {'+inner_code+'};');\n\t\t}\n\t\t\n\t\t// inherit static from parent, if applicable\n\t\tif (parent.prototype.__static) {\n\t\t\tfor (var key in parent.prototype.__static) {\n\t\t\t\tobj[key] = parent.prototype.__static[key];\n\t\t\t}\n\t\t}\n\n\t\tvar static_members = members.__static;\n\t\tif (static_members) {\n\t\t\tfor (var key in static_members) {\n\t\t\t\tobj[key] = static_members[key];\n\t\t\t}\n\t\t}\n\n\t\tobj.prototype = new parent();\n\t\t// for (var key in parent.prototype) container[subname].prototype[key] = parent.prototype[key];\n\t\tfor (var key in members) obj.prototype[key] = members[key];\n\t\t\n\t\tobj.extend = obj.subclass = function(name, members) {\n\t\t\tClass.subclass( this, name, members );\n\t\t};\n\t\tobj.set = obj.add = function(members) {\n\t\t\tClass.add( this, members );\n\t\t};\n\t},\n\tadd: function(obj, members) {\n\t\t// add members to an existing class\n\t\tfor (var key in members) obj.prototype[key] = members[key];\n\t},\n\trequire: function() {\n\t\t// make sure classes are loaded\n\t\tfor (var idx = 0, len = arguments.length; idx < len; idx++) {\n\t\t\tassert( !!eval('window.' + arguments[idx]) );\n\t\t}\n\t\treturn true;\n\t}\n};\nClass.extend = Class.subclass;\nClass.set = Class.add;\n\nif (!window.assert) window.assert = function(fact, msg) {\n\t// very simple assert\n\tif (!fact) return alert(\"ASSERT FAILED!  \" + msg);\n\treturn fact;\n};\n"]}