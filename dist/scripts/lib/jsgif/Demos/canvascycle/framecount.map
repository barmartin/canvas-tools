{"version":3,"file":"framecount.js","sources":["../../../../../../build/scripts/lib/jsgif/Demos/canvascycle/framecount.js"],"names":["FrameCount","current","average","frameCount","lastSecond","startTime","totalFrames","ie","navigator","userAgent","match","visible","init","this","html","setTimeout","document","body","insertAdjacentHTML","div","createElement","style","position","zIndex","left","top","width","innerHTML","getElementsByTagName","appendChild","update","getElementById","reset","_now_epoch","_mydate","Date","getTime","count","_now","_int_now","parseInt"],"mappings":"AAMA,GAAIA,aAEHC,QAAS,EACTC,QAAS,EACTC,WAAY,EACZC,WAAY,EACZC,UAAW,EACXC,YAAa,EACbC,KAAMC,UAAUC,UAAUC,MAAM,QAChCC,SAAS,EAETC,KAAM,WAEL,GAAIC,KAAKF,QAAS,CACjB,GAAIG,GAAO,uNAEX,IAAID,KAAKN,GACRQ,WAAY,WACXC,SAASC,KAAKC,mBAAmB,YAChC,gFAAkFJ,EAAO,WAExF,SAEC,CACJ,GAAIK,GAAMH,SAASI,cAAc,MACjCD,GAAIE,MAAMC,SAAW,QACrBH,EAAIE,MAAME,OAAS,OACnBJ,EAAIE,MAAMG,KAAO,MACjBL,EAAIE,MAAMI,IAAM,MAChBN,EAAIE,MAAMK,MAAQ,OAClBP,EAAIQ,UAAYb,EAChBE,SAASY,qBAAqB,QAAQ,GAAGC,YAAYV,MAKxDW,OAAQ,WAEP,GAAIX,GAAMH,SAASe,eAAe,eAClC,IAAIZ,EAAK,CACR,GAAIL,GAAO,EAEXA,IAAQ,UACRA,GAAQ,kEAAoED,KAAKZ,QAAU,aAC3Fa,GAAQ,kEAAoED,KAAKX,QAAU,aAC3FY,GAAQ,mEAAqED,KAAKP,YAAc,aAChGQ,GAAQ,WAERA,GAAQ,0DAERK,EAAIQ,UAAYb,IAIlBkB,MAAO,WACNnB,KAAKZ,QAAU,EACfY,KAAKX,QAAU,EACfW,KAAKV,WAAa,EAClBU,KAAKT,WAAa,EAClBS,KAAKR,UAAY,EACjBQ,KAAKP,YAAc,EACnBO,KAAKiB,UAGNG,WAAY,WAEX,GAAIC,GAAU,GAAIC,KAClB,OAAOD,GAAQE,UAAY,KAG5BC,MAAO,WAEN,GAAIC,GAAOzB,KAAKoB,aACZM,EAAWC,SAASF,EAAM,GAC1BC,IAAY1B,KAAKT,aACpBS,KAAKP,aAAeO,KAAKV,WACpBU,KAAKR,YAAWQ,KAAKR,UAAYkC,GACP1B,KAAKX,QAAhCqC,EAAW1B,KAAKR,UAA0BQ,KAAKP,aAAeiC,EAAW1B,KAAKR,WAC9DQ,KAAKV,WAEzBU,KAAKZ,QAAUY,KAAKV,WACpBU,KAAKV,WAAa,EAClBU,KAAKT,WAAamC,EAEd1B,KAAKF,SAASE,KAAKiB,UAExBjB,KAAKV","sourcesContent":["// Basic Frame Counting Class\n// For displaying current and average frames per second\n// Author: Joseph Huckaby\n// Copyright (c) 2010 Joseph Huckaby\n// Usage: FrameCount.count() // for every frame\n\nvar FrameCount = {\n\t\n\tcurrent: 0,\n\taverage: 0,\n\tframeCount: 0,\n\tlastSecond: 0,\n\tstartTime: 0,\n\ttotalFrames: 0,\n\tie: !!navigator.userAgent.match(/MSIE/),\n\tvisible: true,\n\t\n\tinit: function() {\n\t\t// create floating widget\n\t\tif (this.visible) {\n\t\t\tvar html = '<div id=\"d_framecount\" style=\"float:right; width:200px; border:1px solid #ccc; background:#eee; margin:10px; padding:10px; font-family:Helvetica,sans-serif; font-size:11px; color:#444;\">Waiting for frames...</div>';\n\t\t\n\t\t\tif (this.ie) {\n\t\t\t\tsetTimeout( function() {\n\t\t\t\t\tdocument.body.insertAdjacentHTML('beforeEnd',\n\t\t\t\t\t\t'<div style=\"position:absolute; z-index:9999; left:0px; top:0px; width:100%;\">' + html + '</div>'\n\t\t\t\t\t);\n\t\t\t\t}, 1000 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar div = document.createElement('DIV');\n\t\t\t\tdiv.style.position = 'fixed';\n\t\t\t\tdiv.style.zIndex = '9999';\n\t\t\t\tdiv.style.left = '0px';\n\t\t\t\tdiv.style.top = '0px';\n\t\t\t\tdiv.style.width = '100%';\n\t\t\t\tdiv.innerHTML = html;\n\t\t\t\tdocument.getElementsByTagName('body')[0].appendChild(div);\n\t\t\t}\n\t\t}\n\t},\n\t\n\tupdate: function() {\n\t\t// update display\n\t\tvar div = document.getElementById('d_framecount');\n\t\tif (div) {\n\t\t\tvar html = '';\n\t\t\t\n\t\t\thtml += '<table>';\n\t\t\thtml += '<tr><td align=\"right\"><b>Current FPS:</b></td><td align=\"left\">' + this.current + '</td></tr>';\n\t\t\thtml += '<tr><td align=\"right\"><b>Average FPS:</b></td><td align=\"left\">' + this.average + '</td></tr>';\n\t\t\thtml += '<tr><td align=\"right\"><b>Total Frames:</b></td><td align=\"left\">' + this.totalFrames + '</td></tr>';\n\t\t\thtml += '</table>';\n\t\t\t\n\t\t\thtml += '<br/><a href=\"#\" onClick=\"FrameCount.reset()\">Reset</a>';\n\t\t\t\n\t\t\tdiv.innerHTML = html;\n\t\t}\n\t},\n\t\n\treset: function() {\n\t\tthis.current = 0;\n\t\tthis.average = 0;\n\t\tthis.frameCount = 0;\n\t\tthis.lastSecond = 0;\n\t\tthis.startTime = 0;\n\t\tthis.totalFrames = 0;\n\t\tthis.update();\n\t},\n\t\n\t_now_epoch: function() {\n\t\t// return current date/time in hi-res epoch seconds\n\t\tvar _mydate = new Date();\n\t\treturn _mydate.getTime() / 1000;\n\t},\n\t\n\tcount: function() {\n\t\t// advance one frame\n\t\tvar _now = this._now_epoch();\n\t\tvar _int_now = parseInt(_now, 10);\n\t\tif (_int_now != this.lastSecond) {\n\t\t\tthis.totalFrames += this.frameCount;\n\t\t\tif (!this.startTime) this.startTime = _int_now;\n\t\t\tif (_int_now > this.startTime) this.average = this.totalFrames / (_int_now - this.startTime);\n\t\t\telse this.average = this.frameCount;\n\t\t\t\n\t\t\tthis.current = this.frameCount;\n\t\t\tthis.frameCount = 0;\n\t\t\tthis.lastSecond = _int_now;\n\t\t\t\n\t\t\tif (this.visible) this.update();\n\t\t}\n\t\tthis.frameCount++;\n\t}\n\t\n};\n\n"]}