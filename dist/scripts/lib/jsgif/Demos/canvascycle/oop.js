function _var_exists(name){try{eval("var foo = "+name+";")}catch(e){return!1}return!0}var Namespace={create:function(path){for(var container=null;path.match(/^(\w+)\.?/);){var key=RegExp.$1;path=path.replace(/^(\w+)\.?/,""),container?(container[key]||(container[key]={}),container=container[key]):(_var_exists(key)||eval("window."+key+" = {};"),eval("container = "+key+";"))}},prep:function(a){if(a.match(/^(.+)\.(\w+)$/)){var b=RegExp.$1;a=RegExp.$2,Namespace.create(b)}return{name:a}}},Class={create:function(name,members){if(!name&&!members)return function(){this.initialize?this.initialize.apply(this,arguments):this.__construct&&this.__construct.apply(this,arguments)};assert(name,"Must pass name to Class.create"),members||(members={}),members.__parent=null;var ns=Namespace.prep(name),full_name=name;name=ns.name,members.__name=name,members.__construct||(members.__construct=function(){});var obj=null;eval(full_name+" = obj = members.__construct;");var static_members=members.__static;if(static_members)for(var key in static_members)obj[key]=static_members[key];obj.prototype=members,obj.extend=obj.subclass=function(a,b){Class.subclass(this,a,b)},obj.set=obj.add=function(a){Class.add(this,a)}},subclass:function(parent,name,members){assert(parent,"Must pass parent class to Class.subclass"),assert(name,"Must pass name to Class.subclass"),members||(members={}),members.__name=name,members.__parent=parent.prototype;var ns=Namespace.prep(name),subname=ns.name,obj=null;if(members.__construct)eval(name+" = obj = members.__construct;");else{var code=parent.toString(),args=code.substring(code.indexOf("(")+1,code.indexOf(")")),inner_code=code.substring(code.indexOf("{")+1,code.lastIndexOf("}"));eval("members.__construct = "+name+" = obj = function ("+args+") {"+inner_code+"};")}if(parent.prototype.__static)for(var key in parent.prototype.__static)obj[key]=parent.prototype.__static[key];var static_members=members.__static;if(static_members)for(var key in static_members)obj[key]=static_members[key];obj.prototype=new parent;for(var key in members)obj.prototype[key]=members[key];obj.extend=obj.subclass=function(a,b){Class.subclass(this,a,b)},obj.set=obj.add=function(a){Class.add(this,a)}},add:function(a,b){for(var c in b)a.prototype[c]=b[c]},require:function(){for(var idx=0,len=arguments.length;len>idx;idx++)assert(!!eval("window."+arguments[idx]));return!0}};Class.extend=Class.subclass,Class.set=Class.add,window.assert||(window.assert=function(a,b){return a?a:alert("ASSERT FAILED!  "+b)});
//# sourceMappingURL=oop.map