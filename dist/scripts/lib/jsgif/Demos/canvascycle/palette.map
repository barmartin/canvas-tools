{"version":3,"file":"palette.js","sources":["../../../../../../build/scripts/lib/jsgif/Demos/canvascycle/palette.js"],"names":["Class","create","red","green","blue","__construct","r","g","b","this","set","rate","reverse","low","high","rev","l","h","colors","baseColors","cycles","numColors","numCycles","__static","PRECISION","USE_BLEND_SHIFT","CYCLE_SPEED","ENABLE_CYCLING","DFLOAT_MOD","a","Math","floor","Palette","clrs","cycls","idx","len","length","clr","push","Color","cyc","Cycle","copyColors","source","dest","swapColors","temp","reverseColors","range","i","cycleSize","fadeColor","sourceColor","destColor","frame","max","tempColor","shiftColors","amount","j","blendShiftColors","cycle","sourceColors","timeNow","speedAdjust","blendShift","cycleRate","cycleAmount","sin","fade","destPalette","fadeToColor","color","burnOut","getRawTransformedColors"],"mappings":"AAMAA,MAAMC,OAAQ,SAEbC,IAAK,EACLC,MAAO,EACPC,KAAM,EAENC,YAAa,SAASC,EAAGC,EAAGC,GAC3BC,KAAKC,IAAIJ,EAAGC,EAAGC,IAGhBE,IAAK,SAASJ,EAAGC,EAAGC,GACnBC,KAAKP,IAAMI,EACXG,KAAKN,MAAQI,EACbE,KAAKL,KAAOI,KAIdR,MAAMC,OAAQ,SAEbU,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,KAAM,EAENT,YAAa,SAASC,EAAGS,EAAKC,EAAGC,GAChCR,KAAKE,KAAOL,EACZG,KAAKM,IAAMA,EACXN,KAAKI,IAAMG,EACXP,KAAKK,KAAOG,KAIdjB,MAAMC,OAAQ,WAIbiB,OAAQ,KACRC,WAAY,KACZC,OAAQ,KACRC,UAAW,EACXC,UAAW,EAEXC,UAECC,UAAW,IACXC,gBAAiB,EACjBC,YAAa,IACbC,eAAgB,EAGhBC,WAAY,SAASC,EAAErB,GAAK,MAAQsB,MAAKC,MAAMF,EAAEG,QAAQR,WAAaM,KAAKC,MAAMvB,EAAEwB,QAAQR,WAAYQ,QAAQR,YAGhHnB,YAAa,SAAS4B,EAAMC,GAE3BzB,KAAKS,UACLT,KAAKU,aACL,KAAK,GAAIgB,GAAM,EAAGC,EAAMH,EAAKI,OAAcD,EAAND,EAAWA,IAAO,CACtD,GAAIG,GAAML,EAAKE,EACf1B,MAAKU,WAAWoB,KAAM,GAAIC,OAAOF,EAAI,GAAIA,EAAI,GAAIA,EAAI,KAGtD7B,KAAKW,SACL,KAAK,GAAIe,GAAM,EAAGC,EAAMF,EAAMG,OAAcD,EAAND,EAAWA,IAAO,CACvD,GAAIM,GAAMP,EAAMC,EAChB1B,MAAKW,OAAOmB,KAAM,GAAIG,OAAOD,EAAI9B,KAAM8B,EAAI7B,QAAS6B,EAAI5B,IAAK4B,EAAI3B,OAGlEL,KAAKY,UAAYZ,KAAKU,WAAWkB,OACjC5B,KAAKa,UAAYb,KAAKW,OAAOiB,QAG9BM,WAAY,SAASC,EAAQC,GAE5B,IAAK,GAAIV,GAAM,EAAGC,EAAMQ,EAAOP,OAAcD,EAAND,EAAWA,IAC5CU,EAAKV,KAAMU,EAAKV,GAAO,GAAIK,QAChCK,EAAKV,GAAKjC,IAAM0C,EAAOT,GAAKjC,IAC5B2C,EAAKV,GAAKhC,MAAQyC,EAAOT,GAAKhC,MAC9B0C,EAAKV,GAAK/B,KAAOwC,EAAOT,GAAK/B,MAI/B0C,WAAY,SAASjB,EAAGrB,GAEvB,GAAIuC,EACJA,GAAOlB,EAAE3B,IAAK2B,EAAE3B,IAAMM,EAAEN,IAAKM,EAAEN,IAAM6C,EACrCA,EAAOlB,EAAE1B,MAAO0B,EAAE1B,MAAQK,EAAEL,MAAOK,EAAEL,MAAQ4C,EAC7CA,EAAOlB,EAAEzB,KAAMyB,EAAEzB,KAAOI,EAAEJ,KAAMI,EAAEJ,KAAO2C,GAG1CC,cAAe,SAAS9B,EAAQ+B,GAE/B,GAAIC,GACAC,EAAaF,EAAMnC,KAAOmC,EAAMpC,IAAO,CAE3C,KAAKqC,EAAE,EAAKC,EAAU,EAAZD,EAAeA,IACxBzC,KAAKqC,WAAW5B,EAAO+B,EAAMpC,IAAIqC,GAAIhC,EAAO+B,EAAMnC,KAAKoC,KAGzDE,UAAW,SAASC,EAAaC,EAAWC,EAAOC,GAElD,GAAIC,GAAY,GAAIjB,MAEpB,OAAKgB,IACO,EAARD,IAAWA,EAAQ,GACnBA,EAAQC,IAAKD,EAAQC,GAEzBC,EAAUvD,IAAM4B,KAAKC,MAAOsB,EAAYnD,KAASoD,EAAUpD,IAAMmD,EAAYnD,KAAOqD,EAASC,GAC7FC,EAAUtD,MAAQ2B,KAAKC,MAAOsB,EAAYlD,OAAWmD,EAAUnD,MAAQkD,EAAYlD,OAASoD,EAASC,GACrGC,EAAUrD,KAAO0B,KAAKC,MAAOsB,EAAYjD,MAAUkD,EAAUlD,KAAOiD,EAAYjD,MAAQmD,EAASC,GAE3F,GARWH,GAWlBK,YAAa,SAASxC,EAAQ+B,EAAOU,GAEpC,GAAIT,GAAGU,EAAGb,CAGV,KAFAY,EAAS7B,KAAKC,MAAM4B,GAEfT,EAAI,EAAOS,EAAJT,EAAYA,IAAK,CAE5B,IADAH,EAAO7B,EAAO+B,EAAMnC,MACf8C,EAAEX,EAAMnC,KAAK,EAAG8C,GAAGX,EAAMpC,IAAK+C,IAClC1C,EAAO0C,EAAE,GAAK1C,EAAO0C,EACtB1C,GAAO+B,EAAMpC,KAAOkC,IAItBc,iBAAkB,SAAS3C,EAAQ+B,EAAOU,GAGzC,GAAIC,GAAGb,CAEPtC,MAAKiD,YAAYxC,EAAQ+B,EAAOU,EAEhC,IAAIJ,GAAQzB,KAAKC,OAAQ4B,EAAS7B,KAAKC,MAAM4B,IAAW3B,QAAQR,UAGhE,KADAuB,EAAO7B,EAAO+B,EAAMnC,MACf8C,EAAEX,EAAMnC,KAAK,EAAG8C,GAAGX,EAAMpC,IAAK+C,IAClC1C,EAAO0C,EAAE,GAAKnD,KAAK2C,UAAUlC,EAAO0C,EAAE,GAAI1C,EAAO0C,GAAIL,EAAOvB,QAAQR,UACrEN,GAAO+B,EAAMpC,KAAOJ,KAAK2C,UAAUlC,EAAO+B,EAAMpC,KAAMkC,EAAMQ,EAAOvB,QAAQR,YAG5EsC,MAAO,SAASC,EAAcC,EAASC,EAAaC,GAEnD,GAAIhB,GACAC,EAAWgB,EACXC,CAIJ,IAFA3D,KAAKkC,WAAYoB,EAActD,KAAKS,QAEhCc,QAAQL,eACX,IAAKuB,EAAE,EAAGA,EAAEzC,KAAKa,UAAW4B,IAAK,CAChC,GAAIY,GAAQrD,KAAKW,OAAO8B,EACpBY,GAAMnD,OACTwC,EAAaW,EAAMhD,KAAOgD,EAAMjD,IAAO,EACvCsD,EAAYL,EAAMnD,KAAOmB,KAAKC,MAAMC,QAAQN,YAAcuC,GAEtDH,EAAMlD,QAAU,EAEnBwD,EAAcpC,QAAQJ,WAAYoC,GAAW,IAAOG,GAAahB,GAExC,GAAjBW,EAAMlD,SAEdwD,EAAcpC,QAAQJ,WAAYoC,GAAW,IAAOG,GAAyB,EAAZhB,GAC7DiB,GAAejB,IAAWiB,EAAyB,EAAVjB,EAAeiB,IAEpDN,EAAMlD,QAAU,IAExBwD,EAAcxC,WAAYoC,GAAW,IAAOG,GAAahB,GACzDiB,EAActC,KAAKuC,IAAmB,UAAdD,EAA0B,EAAGjB,GAAa,EAC7C,GAAjBW,EAAMlD,QAAcwD,GAAgBjB,EAAY,EAC1B,GAAjBW,EAAMlD,UAAcwD,GAAgBjB,EAAY,IAGrC,GAAjBW,EAAMlD,SAAcH,KAAKuC,cAAcvC,KAAKS,OAAQ4C,GAEpD9B,QAAQP,iBAAmByC,EAAYzD,KAAKoD,iBAAiBpD,KAAKS,OAAQ4C,EAAOM,GAChF3D,KAAKiD,YAAYjD,KAAKS,OAAQ4C,EAAOM,GAErB,GAAjBN,EAAMlD,SAAcH,KAAKuC,cAAcvC,KAAKS,OAAQ4C,GAExDA,EAAMM,YAAcA,KAMxBE,KAAM,SAASC,EAAahB,EAAOC,GAElC,GAAIrB,EAEJ,KAAKA,EAAI,EAAGA,EAAI1B,KAAKY,UAAWc,IAC/B1B,KAAKS,OAAOiB,GAAO1B,KAAK2C,UAAU3C,KAAKS,OAAOiB,GAAMoC,EAAYrD,OAAOiB,GAAMoB,EAAOC,IAGtFgB,YAAa,SAASC,EAAOlB,EAAOC,GAEnC,GAAIrB,EAEJ,KAAKA,EAAI,EAAGA,EAAI1B,KAAKY,UAAWc,IAC/B1B,KAAKS,OAAOiB,GAAO1B,KAAK2C,UAAU3C,KAAKS,OAAOiB,GAAMsC,EAAOlB,EAAOC,IAGpEkB,QAAS,SAASnB,EAAOC,GAExB,GAAIrB,GAAKsC,EAAOd,EAAS7B,KAAKC,MAAM,KAAOwB,EAAQC,GAEnD,KAAKrB,EAAI,EAAGA,EAAI1B,KAAKY,UAAWc,IAC/BsC,EAAQhE,KAAKS,OAAOiB,GACpBsC,EAAMvE,KAAOyD,EAAYc,EAAMvE,IAAM,IAAGuE,EAAMvE,IAAM,GACpDuE,EAAMtE,OAASwD,EAAYc,EAAMtE,MAAQ,IAAGsE,EAAMtE,MAAQ,GAC1DsE,EAAMrE,MAAQuD,EAAYc,EAAMrE,KAAO,IAAGqE,EAAMrE,KAAO,IAIzDuE,wBAAyB,WAGxB,IAAK,GADD1C,MACKE,EAAM,EAAGC,EAAM3B,KAAKS,OAAOmB,OAAcD,EAAND,EAAWA,IAAO,CAC7D,GAAIsC,GAAQhE,KAAKS,OAAOiB,EACxBF,GAAKE,IAAQsC,EAAMvE,IAAKuE,EAAMtE,MAAOsE,EAAMrE,MAE5C,MAAO6B","sourcesContent":["// 8-bit Palette Classes for use in HTML5 Canvas\n// Ported from a C++ library written by Joseph Huckaby\n// BlendShift Technology conceived, designed and coded by Joseph Huckaby\n// Copyright (c) 2001-2002, 2010 Joseph Huckaby.\n// Released under the LGPL v3.0: http://www.opensource.org/licenses/lgpl-3.0.html\n\nClass.create( 'Color', {\n\t// represents one 24-bit RGB color\n\tred: 0,\n\tgreen: 0,\n\tblue: 0,\n\t\n\t__construct: function(r, g, b) {\n\t\tthis.set(r, g, b);\n\t},\n\t\n\tset: function(r, g, b) {\n\t\tthis.red = r;\n\t\tthis.green = g;\n\t\tthis.blue = b;\n\t}\n} );\n\nClass.create( 'Cycle', {\n\t// represents one cycle (one range of colors that animate)\n\trate: 0,\n\treverse: 0,\n\tlow: 0,\n\thigh: 0,\n\t\n\t__construct: function(r, rev, l, h) {\n\t\tthis.rate = r;\n\t\tthis.rev = rev;\n\t\tthis.low = l;\n\t\tthis.high = h;\n\t}\n} );\n\nClass.create( 'Palette', {\n\t// represents a single palette, which can have\n\t// multiple \"cycles\" (animated color ranges) defined.\n\t\n\tcolors: null,\n\tbaseColors: null,\n\tcycles: null,\n\tnumColors: 0,\n\tnumCycles: 0,\n\t\n\t__static: {\n\t\t// static class members\n\t\tPRECISION: 100,\n\t\tUSE_BLEND_SHIFT: 1,\n\t\tCYCLE_SPEED: 280,\n\t\tENABLE_CYCLING: 1,\n\t\t\n\t\t// this utility function allows for variable precision floating point modulus\n\t\tDFLOAT_MOD: function(a,b) { return (Math.floor(a*Palette.PRECISION) % Math.floor(b*Palette.PRECISION))/Palette.PRECISION; }\n\t},\n\t\n\t__construct: function(clrs, cycls) {\n\t\t// class constructor\n\t\tthis.colors = [];\n\t\tthis.baseColors = [];\n\t\tfor (var idx = 0, len = clrs.length; idx < len; idx++) {\n\t\t\tvar clr = clrs[idx];\n\t\t\tthis.baseColors.push( new Color( clr[0], clr[1], clr[2] ) );\n\t\t}\n\t\t\n\t\tthis.cycles = [];\n\t\tfor (var idx = 0, len = cycls.length; idx < len; idx++) {\n\t\t\tvar cyc = cycls[idx];\n\t\t\tthis.cycles.push( new Cycle( cyc.rate, cyc.reverse, cyc.low, cyc.high ) );\n\t\t}\n\t\t\n\t\tthis.numColors = this.baseColors.length;\n\t\tthis.numCycles = this.cycles.length;\n\t},\n\t\n\tcopyColors: function(source, dest) {\n\t\t// copy one array of colors to another\n\t\tfor (var idx = 0, len = source.length; idx < len; idx++) {\n\t\t\tif (!dest[idx]) dest[idx] = new Color();\n\t\t\tdest[idx].red = source[idx].red;\n\t\t\tdest[idx].green = source[idx].green;\n\t\t\tdest[idx].blue = source[idx].blue;\n\t\t}\n\t},\n\t\n\tswapColors: function(a, b) {\n\t\t// swap the color values of a with b\n\t\tvar temp;\n\t\ttemp = a.red; a.red = b.red; b.red = temp;\n\t\ttemp = a.green; a.green = b.green; b.green = temp;\n\t\ttemp = a.blue; a.blue = b.blue; b.blue = temp;\n\t},\n\t\n\treverseColors: function(colors, range) {\n\t\t// reverse order of colors\n\t\tvar i;\n\t\tvar cycleSize = (range.high - range.low) + 1;\n\n\t\tfor (i=0; i<cycleSize/2; i++)\n\t\t\tthis.swapColors(colors[range.low+i], colors[range.high-i]);\n\t},\n\t\n\tfadeColor: function(sourceColor, destColor, frame, max) {\n\t\t// fade one color into another by a partial amount, return new color in between\n\t\tvar tempColor = new Color();\n\n\t\tif (!max) return sourceColor; // avoid divide by zero\n\t\tif (frame < 0) frame = 0;\n\t\tif (frame > max) frame = max;\n\n\t\ttempColor.red = Math.floor( sourceColor.red + (((destColor.red - sourceColor.red) * frame) / max) );\n\t\ttempColor.green = Math.floor( sourceColor.green + (((destColor.green - sourceColor.green) * frame) / max) );\n\t\ttempColor.blue = Math.floor( sourceColor.blue + (((destColor.blue - sourceColor.blue) * frame) / max) );\n\n\t\treturn(tempColor);\n\t},\n\t\n\tshiftColors: function(colors, range, amount) {\n\t\t// shift (hard cycle) colors by amount\n\t\tvar i, j, temp;\n\t\tamount = Math.floor(amount);\n\n\t\tfor (i = 0; i < amount; i++) {\n\t\t\ttemp = colors[range.high];\n\t\t\tfor (j=range.high-1; j>=range.low; j--)\n\t\t\t\tcolors[j+1] = colors[j];\n\t\t\tcolors[range.low] = temp;\n\t\t} // i loop\n\t},\n\t\n\tblendShiftColors: function(colors, range, amount) {\n\t\t// shift colors using BlendShift (fade colors creating a smooth transition)\n\t\t// BlendShift Technology conceived, designed and coded by Joseph Huckaby\n\t\tvar j, temp;\n\n\t\tthis.shiftColors(colors, range, amount);\n\n\t\tvar frame = Math.floor( (amount - Math.floor(amount)) * Palette.PRECISION );\n\n\t\ttemp = colors[range.high];\n\t\tfor (j=range.high-1; j>=range.low; j--)\n\t\t\tcolors[j+1] = this.fadeColor(colors[j+1], colors[j], frame, Palette.PRECISION);\n\t\tcolors[range.low] = this.fadeColor(colors[range.low], temp, frame, Palette.PRECISION);\n\t},\n\t\n\tcycle: function(sourceColors, timeNow, speedAdjust, blendShift) {\n\t\t// cycle all animated color ranges in palette based on timestamp\n\t\tvar i;\n\t\tvar cycleSize, cycleRate;\n\t\tvar cycleAmount;\n\t\t\n\t\tthis.copyColors( sourceColors, this.colors );\n\t\t\n\t\tif (Palette.ENABLE_CYCLING) {\n\t\t\tfor (i=0; i<this.numCycles; i++) {\n\t\t\t\tvar cycle = this.cycles[i];\n\t\t\t\tif (cycle.rate) {\n\t\t\t\t\tcycleSize = (cycle.high - cycle.low) + 1;\n\t\t\t\t\tcycleRate = cycle.rate / Math.floor(Palette.CYCLE_SPEED / speedAdjust);\n\t\t\t\t\t\n\t\t\t\t\tif (cycle.reverse < 3) {\n\t\t\t\t\t\t// standard cycle\n\t\t\t\t\t\tcycleAmount = Palette.DFLOAT_MOD((timeNow / (1000 / cycleRate)), cycleSize);\n\t\t\t\t\t}\n\t\t\t\t\telse if (cycle.reverse == 3) {\n\t\t\t\t\t\t// ping-pong\n\t\t\t\t\t\tcycleAmount = Palette.DFLOAT_MOD((timeNow / (1000 / cycleRate)), cycleSize * 2);\n\t\t\t\t\t\tif (cycleAmount >= cycleSize) cycleAmount = (cycleSize*2) - cycleAmount;\n\t\t\t\t\t} \n\t\t\t\t\telse if (cycle.reverse < 6) {\n\t\t\t\t\t\t// sine wave\n\t\t\t\t\t\tcycleAmount = DFLOAT_MOD((timeNow / (1000 / cycleRate)), cycleSize);\n\t\t\t\t\t\tcycleAmount = Math.sin((cycleAmount * 3.1415926 * 2)/cycleSize) + 1;\n\t\t\t\t\t\tif (cycle.reverse == 4) cycleAmount *= (cycleSize / 4);\n\t\t\t\t\t\telse if (cycle.reverse == 5) cycleAmount *= (cycleSize / 2);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (cycle.reverse == 2) this.reverseColors(this.colors, cycle);\n\n\t\t\t\t\tif (Palette.USE_BLEND_SHIFT && blendShift) this.blendShiftColors(this.colors, cycle, cycleAmount);\n\t\t\t\t\telse this.shiftColors(this.colors, cycle, cycleAmount);\n\n\t\t\t\t\tif (cycle.reverse == 2) this.reverseColors(this.colors, cycle);\n\t\t\t\t\t\n\t\t\t\t\tcycle.cycleAmount = cycleAmount;\n\t\t\t\t} // active cycle\n\t\t\t} // i loop\n\t\t}\n\t},\n\t\n\tfade: function(destPalette, frame, max) {\n\t\t// fade entire palette to another, by adjustable amount\n\t\tvar idx;\n\n\t\tfor (idx=0; idx<this.numColors; idx++)\n\t\t\tthis.colors[idx] = this.fadeColor(this.colors[idx], destPalette.colors[idx], frame, max);\n\t},\n\t\n\tfadeToColor: function(color, frame, max) {\n\t\t// fade entire palette to a single color, by adjustable amount\n\t\tvar idx;\n\n\t\tfor (idx=0; idx<this.numColors; idx++)\n\t\t\tthis.colors[idx] = this.fadeColor(this.colors[idx], color, frame, max);\n\t},\n\t\n\tburnOut: function(frame, max) {\n\t\t// burn colors towards black\n\t\tvar idx, color, amount = Math.floor(255 * (frame / max));\n\t\t\n\t\tfor (idx=0; idx<this.numColors; idx++) {\n\t\t\tcolor = this.colors[idx];\n\t\t\tcolor.red -= amount; if (color.red < 0) color.red = 0;\n\t\t\tcolor.green -= amount; if (color.green < 0) color.green = 0;\n\t\t\tcolor.blue -= amount; if (color.blue < 0) color.blue = 0;\n\t\t}\n\t},\n\t\n\tgetRawTransformedColors: function() {\n\t\t// return transformed colors as array of arrays\n\t\tvar clrs = [];\n\t\tfor (var idx = 0, len = this.colors.length; idx < len; idx++) {\n\t\t\tvar color = this.colors[idx];\n\t\t\tclrs[idx] = [color.red, color.green, color.blue];\n\t\t}\n\t\treturn clrs;\n\t}\n\t\n} );\n"]}